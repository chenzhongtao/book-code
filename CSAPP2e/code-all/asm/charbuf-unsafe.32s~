	.file	"charbuf-unsafe.c"
	.text
.globl len
	.type	len, @function
len:
	pushl	%ebp
	movl	%esp, %ebp
	movl	8(%ebp), %ecx
	movzbl	(%ecx), %eax
	addl	$1, %eax
	movl	$0, %edx
	cmpb	$1, %al
	jbe	.L3
.L6:
	addl	$1, %edx
	movzbl	(%ecx,%edx), %eax
	addl	$1, %eax
	cmpb	$1, %al
	ja	.L6
.L3:
	movl	%edx, %eax
	popl	%ebp
	ret
	.size	len, .-len
.globl storeint
	.type	storeint, @function
storeint:
	pushl	%ebp
	movl	%esp, %ebp
	movl	12(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, (%edx)
	popl	%ebp
	ret
	.size	storeint, .-storeint
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"%d"
	.text
.globl iptoa
	.type	iptoa, @function
iptoa:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$24, %esp
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 16(%esp)
	movl	$.LC0, 12(%esp)
	movl	$-1, 8(%esp)
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__sprintf_chk
	leave
	ret
	.size	iptoa, .-iptoa
.globl intlen2
	.type	intlen2, @function
intlen2:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	subl	$36, %esp
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	leal	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-20(%ebp), %ebx
	movl	%ebx, (%esp)
	call	iptoa
	movl	%ebx, (%esp)
	call	len
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
	.size	intlen2, .-intlen2
.globl itoa
	.type	itoa, @function
itoa:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$24, %esp
	movl	12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	$.LC0, 12(%esp)
	movl	$-1, 8(%esp)
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__sprintf_chk
	leave
	ret
	.size	itoa, .-itoa
.globl intlen
	.type	intlen, @function
intlen:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	subl	$36, %esp
	leal	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	storeint
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-20(%ebp), %ebx
	movl	%ebx, (%esp)
	call	itoa
	movl	%ebx, (%esp)
	call	len
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
	.size	intlen, .-intlen
	.ident	"GCC: (Ubuntu 4.3.2-1ubuntu11) 4.3.2"
	.section	.note.GNU-stack,"",@progbits
